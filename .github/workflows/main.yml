name: Build App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Se le hace Checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Paso 2: Se elecciona el JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Paso 3:Dependencias de Cache SonarQube 
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      # Paso 4:Dependencias de  Cache Maven 
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      # Paso 5: SonarQube
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_VERSION: ${{ secrets.SONAR_VERSION }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
      # Paso 4: Run Maven build
      - name: Build with Maven
        run: mvn clean install
      
      # Paso 5: Guardar Jar
      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Guardar Jar
          path: target/*.jar
      

      # Paso 6 Pruebas
      - name: Run Tests
        run: mvn test

